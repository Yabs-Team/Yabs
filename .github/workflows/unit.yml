name: Unit

on: [push]

jobs:
  backend-unit-tests:

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v1
      id: cache
      with:
        path: ~/local/rubies
        key: ${{ runner.os }}-ruby-2.5.1
    - uses: clupprich/ruby-build-action@master
      id: ruby
      with:
        ruby-version: 2.5.1
        cache-available: ${{ steps.cache.outputs.cache-hit == 'true' }}
    - uses: actions/cache@v1
      with:
        path: backend/vendor/bundle
        key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gem-
    - name: Bundle install
      run: |
        cd backend
        gem install bundler:1.16.6
        bundle install --jobs=4 --retry=3 --path vendor/bundle
    - name: Load database from schema
      run: |
        cd backend
        bundle exec bin/rails db:schema:load
    - name: Run unit tests
      run: |
        cd backend
        bundle exec bin/rake

  frontend-unit-tests:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - name: Install packages
      run: |
        cd frontend
        yarn install
    - name: Run unit tests
      run: |
        cd frontend
        yarn test:unit

  api-tests:

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v1
      id: cache
      with:
        path: ~/local/rubies
        key: ${{ runner.os }}-ruby-2.5.1
    - uses: clupprich/ruby-build-action@master
      id: ruby
      with:
        ruby-version: 2.5.1
        cache-available: ${{ steps.cache.outputs.cache-hit == 'true' }}
    - uses: actions/cache@v1
      with:
        path: backend/vendor/bundle
        key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gem-
    - name: Bundle install
      run: |
        cd backend
        gem install bundler:1.16.6
        bundle install --jobs=4 --retry=3 --path vendor/bundle
    - name: Load database from schema
      run: |
        cd backend
        bundle exec bin/rails db:schema:load
    - name: Run rails backend
      env:
        RAILS_ENV: test
      run: |
        cd backend
        bundle exec bin/rails s &
    - name: run API tests
      run:
        npx newman run https://api.getpostman.com/collections/$COLLECTION_UID?apikey=$POSTMAN_KEY
      env:
        COLLECTION_UID: ${{secrets.COLLECTION_UID}}
        POSTMAN_KEY: ${{secrets.POSTMAN_KEY}}

  frontend-lint:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - name: Install packages
      run: |
        cd frontend
        yarn install
    - name: Run linter
      run: |
        cd frontend
        yarn lintnf
